Revision history for {{$dist->name}}

{{$NEXT}}
        - rework ordering in processing queued bench bundles
          so that we can use an earlier optimization again for
          inserting large amounts of data.

0.025     2019-05-09
        - optimizations in queue processing

0.024     2018-04-11
        - tweak sql schema with more indexes
        - rework transaction handling in queue processing
        - new comparator 'is_empty' to check for absence of value
        - renamed comparator 'not like' into 'not_like'

0.023     2017-02-08
        - parallel sync_search_engine

0.022     2017-02-07
        - default non-core fields mapping type: keyword

0.021     2017-01-31
        - Elasticsearch support

0.020     2016-08-19
        - *Gna* - mysql backend: revert convert on comparison operators
          (numerical aggregates seem to work, though)

0.019     2016-08-19
        - mysql backend: force numeric convert on comparison operators and numerical aggregates

0.018     2016-07-29
        - mysql: create tables can now work with UTF-8
        - 'stats' also provides 'count of additional key/value pairs'
        - add CREATED_AT/VALUE_ID to essentials when returning single point

0.017     2016-03-04
        - support for 'stats' - provide counters of points and metrics

0.016     2016-02-26
        - fix AUTOINCREMENT on raw_bench_bundles
        - fix DB-specific special NULL handling of undefined values
        - support for 'listkeys'

0.015     2015-09-23
        - more refactoring of common methods between db backends

0.014     2015-09-17
        - namespace confusion carnage - redo cpan upload

0.013     2015-09-17
        - forked into different namespace to better fit the common theme
          was: Tapper-Benchmark
          now: BenchmarkAnything-Storage-Backend-SQL

0.012     2015-09-17
        - refactor common methods between db backends

0.011     2015-09-16
        - let the db take care of compression in raw queue

0.010     2015-09-15
        - drop feature 'switch' - replace given/when with classic if/else

0.009     2015-09-11
        - DB tuning/tweaking:
          * avoid deadlocks due to gap locking
          * fix missing finish_transaction
          * be crisp about UNSIGNED and use BLOB for raw queue
          * simplify resetting of AutoCommit mode

0.008     2015-09-08
        - enable transactions for garbage collector

0.007     2015-09-08
        - queuing mode for high-throughput incoming results
          * part 1) adds raw results into separate table
          * part 2) process one of those values,
                    likely called in bundles or from multiple workers
          * part 3) garbage collect successfully processed results

0.006     2015-08-26
        - disable caching due to wrong behaviour

0.005     2015-08-24
        - larger field sizes
        - select_benchmark_point_essentials()
          Get NAME, VALUE, UNIT of a single benchmark point
        - select_complete_benchmark_point()
          Get all additional key/value fields of a single benchmark point
        - get_single_benchmark_point()
          Reconstruct a complete single benchmark point

0.004     2015-08-20
        - get list of benchmark NAMEs

0.003     2015-08-18
        - handling of duplicates and undefined values

0.002     2015-08-17
        - store benchmark VALUEs as VARCHAR to avoid rounding
          and allow non-number values en passant
        - dependency++ to DBD::SQLite 1.48 to avoid error
          'no such column: bav2.bench_additional_value"

0.001     2015-08-16
        - Initial release - CPAN DAY - 2015-08-16
        - based on the released code from early 2014
        - This is a library to provide a schema for
          storing benchmark values in an SQL database
        - Primarily targets mysql, SQLite support
          is basically so far by cutting away known
          trouble maker SQL statement parts
        - Read more about the schema on http://benchmarkanything.org/
